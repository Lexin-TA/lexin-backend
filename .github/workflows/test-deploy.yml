name: Test and Deployment CI-CD

on:
  push:
    branches:
      - main
      - staging
      - deploy

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Python 3
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unit tests and coverage
        run: |
          coverage run --omit="main.py,internal/**,**/__init__.py,**/tests/**" -m pytest ./
          coverage report
          coverage xml
        env:
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_HOST: ${{ secrets.DB_HOST }}

          SECRET_KEY: ${{ secrets.SECRET_KEY }}

          JWT_ACCESS_SECRET_KEY: ${{ secrets.JWT_ACCESS_SECRET_KEY }}
          JWT_REFRESH_SECRET_KEY: ${{ secrets.JWT_REFRESH_SECRET_KEY }}

          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_REDIRECT_URI: ${{ secrets.GOOGLE_REDIRECT_URI }}

          GOOGLE_CLOUD_STORAGE_URI: ${{ secrets.GOOGLE_CLOUD_STORAGE_URI }}
          GOOGLE_BUCKET_NAME: ${{ secrets.GOOGLE_BUCKET_NAME }}
          GOOGLE_BUCKET_LEGAL_DOCUMENT_FOLDER_NAME: ${{ secrets.GOOGLE_BUCKET_LEGAL_DOCUMENT_FOLDER_NAME }}

          FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
          RAG_URL: ${{ secrets.RAG_URL }}

          ELASTICSEARCH_HOST: ${{ secrets.ELASTICSEARCH_HOST }}
          ELASTICSEARCH_API_KEY: ${{ secrets.ELASTICSEARCH_API_KEY }}
          ELASTICSEARCH_USERNAME: ${{ secrets.ELASTICSEARCH_USERNAME }}
          ELASTICSEARCH_PASSWORD: ${{ secrets.ELASTICSEARCH_PASSWORD }}


  deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Python 3
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: GCP authentication
      uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ secrets.SERVICE_API_KEY }}'

    - name: Set database credentials to app.yaml
      uses: 73h/gae-app-yaml-replace-env-variables@v0.3
      env:
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASS: ${{ secrets.DB_PASS }}
        DB_PORT: ${{ secrets.DB_PORT }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_HOST: ${{ secrets.DB_HOST }}

        SECRET_KEY: ${{ secrets.SECRET_KEY }}

        JWT_ACCESS_SECRET_KEY: ${{ secrets.JWT_ACCESS_SECRET_KEY }}
        JWT_REFRESH_SECRET_KEY: ${{ secrets.JWT_REFRESH_SECRET_KEY }}

        GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
        GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
        GOOGLE_REDIRECT_URI: ${{ secrets.GOOGLE_REDIRECT_URI }}

        GOOGLE_CLOUD_STORAGE_URI: ${{ secrets.GOOGLE_CLOUD_STORAGE_URI }}
        GOOGLE_BUCKET_NAME: ${{ secrets.GOOGLE_BUCKET_NAME }}
        GOOGLE_BUCKET_LEGAL_DOCUMENT_FOLDER_NAME: ${{ secrets.GOOGLE_BUCKET_LEGAL_DOCUMENT_FOLDER_NAME }}

        FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
        RAG_URL: ${{ secrets.RAG_URL }}

        ELASTICSEARCH_HOST: ${{ secrets.ELASTICSEARCH_HOST }}
        ELASTICSEARCH_API_KEY: ${{ secrets.ELASTICSEARCH_API_KEY }}
        ELASTICSEARCH_USERNAME: ${{ secrets.ELASTICSEARCH_USERNAME }}
        ELASTICSEARCH_PASSWORD: ${{ secrets.ELASTICSEARCH_PASSWORD }}

      with:
        app_yaml_path: "app.yaml"

    - name: Set up cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        version: '>= 363.0.0'

    - name: Use gcloud to deploy to service instance
      run: gcloud app deploy app.yaml --quiet